sieved[450]
sieved[451]
sv <- rast(sieved[451])
plot(sv,col=class_col[1:4])
sieved[505]
sv <- rast(sieved[504])
plot(sv,col=class_col[1:4])
dw_crop <- resample(DW,y=sv,method='near')
plot(dw_crop)
rec_mat <- matrix(c(0,1,1,
1,6,NA,
6,7,6,
7,8,5,
8,9,NA),
ncol=3,
byrow=TRUE)
dw_rec <- classify(dw_crop,rec_mat)
plot(dw_rec,col=class_col[1:6])
dw_crop[is.na(dw_crop)] <- 9
plot(dw_crop)
rec_mat <- matrix(c(0,1,NA,
1,6,NA,
6,7,6,
7,8,5,
8,9,1),
ncol=3,
byrow=TRUE)
dw_rec <- classify(dw_crop,rec_mat)
plot(dw_rec,col=class_col[1:6])
rec_mat <- matrix(c(0,1,NA,
1,6,NA,
6,7,5,
7,8,6,
8,9,1),
ncol=3,
byrow=TRUE)
dw_rec <- classify(dw_crop,rec_mat)
plot(dw_rec,col=class_col[1:6])
dw_crop[is.na(dw_crop)] <- 9
plot(dw_crop)
rec_mat <- matrix(c(0,1,NA,
1,5,NA,
5,7,5,
7,8,6,
8,9,1),
ncol=3,
byrow=TRUE)
dw_rec <- classify(dw_crop,rec_mat)
plot(dw_rec,col=class_col[1:6])
rec_mat <- matrix(c(0,1,NA,
1,5,NA,
5,6,5,
6,7,6,
7,9,1),
ncol=3,
byrow=TRUE)
dw_rec <- classify(dw_crop,rec_mat)
plot(dw_rec,col=class_col[1:6])
rep_ind <-  which(!is.na(values(dw_rec)))
values(sv)[rep_ind] <- values(dw_rec)[rep_ind]
plot(sv,col=class_col[1:6])
writeRaster(sv,'E:/NGS_wetlands_map/test.tif')
library(tools)
fname <- basename(file_path_sans_ext(sieved[1]))
fname
?writeRaster
sieved <- list.files("C:/Projects/NGS_Amazon_mapping/output/sieve/",
pattern='tile.*tif$',
full.names = TRUE)
?lapply
proc_raster <- function(inras){
sv <- rast(inras)
# plot(sv,col=class_col[1:4])
dw_crop <- resample(DW,y=sv,method='near')
#plot(dw_crop)
dw_crop[is.na(dw_crop)] <- 9
dw_rec <- classify(dw_crop,rec_mat)
# plot(dw_rec,col=class_col[1:6])
rep_ind <-  which(!is.na(values(dw_rec)))
values(sv)[rep_ind] <- values(dw_rec)[rep_ind]
#plot(sv,col=class_col[1:6])
fname <- basename(file_path_sans_ext(inras))
fpath <- paste0("C:/Projects\NGS_Amazon_mapping/output/sieve_comb/",fname,'_comb.tif')
proc_raster <- function(inras){
sv <- rast(inras)
# plot(sv,col=class_col[1:4])
dw_crop <- resample(DW,y=sv,method='near')
#plot(dw_crop)
dw_crop[is.na(dw_crop)] <- 9
dw_rec <- classify(dw_crop,rec_mat)
# plot(dw_rec,col=class_col[1:6])
rep_ind <-  which(!is.na(values(dw_rec)))
values(sv)[rep_ind] <- values(dw_rec)[rep_ind]
#plot(sv,col=class_col[1:6])
fname <- basename(file_path_sans_ext(inras))
fpath <- paste0("C:/Projects\NGS_Amazon_mapping/output/sieve_comb/",fname,'_comb.tif')
proc_raster <- function(inras){
sv <- rast(inras)
# plot(sv,col=class_col[1:4])
dw_crop <- resample(DW,y=sv,method='near')
#plot(dw_crop)
dw_crop[is.na(dw_crop)] <- 9
dw_rec <- classify(dw_crop,rec_mat)
# plot(dw_rec,col=class_col[1:6])
rep_ind <-  which(!is.na(values(dw_rec)))
values(sv)[rep_ind] <- values(dw_rec)[rep_ind]
#plot(sv,col=class_col[1:6])
fname <- basename(file_path_sans_ext(inras))
fpath <- paste0("C:/Projects/NGS_Amazon_mapping/output/sieve_comb/",fname,'_comb.tif')
writeRaster(sv,fpath,filetype='GTiff',datatype='INT1U')
}
lapply(sieved,proc_raster,)
sieved <- list.files("C:/Projects/NGS_Amazon_mapping/output/sieve/",
pattern='tile.*tif$',
full.names = TRUE)
DW <- rast('E:/NGS_wetlands_map/DW/DW_albers_12_5.tif')
class_col <- c("#1f78b4","#b2df89","#33a02c","#aaaaaa","#e31a1c", "#ffff99")
class_names <- c('None','Permanent Water Bodies',
'Non-forest wetland vegetation',
'Wetland Forest',
'Upland',
'Built-up areas',
'Beaches'
)
rec_mat <- matrix(c(0,1,NA,
1,5,NA,
5,6,5,
6,7,6,
7,9,1),
ncol=3,
byrow=TRUE)
proc_raster <- function(inras){
sv <- rast(inras)
# plot(sv,col=class_col[1:4])
dw_crop <- resample(DW,y=sv,method='near')
#plot(dw_crop)
dw_crop[is.na(dw_crop)] <- 9
dw_rec <- classify(dw_crop,rec_mat)
# plot(dw_rec,col=class_col[1:6])
rep_ind <-  which(!is.na(values(dw_rec)))
values(sv)[rep_ind] <- values(dw_rec)[rep_ind]
#plot(sv,col=class_col[1:6])
fname <- basename(file_path_sans_ext(inras))
fpath <- paste0("C:/Projects/NGS_Amazon_mapping/output/sieve_comb/",fname,'_comb.tif')
writeRaster(sv,fpath,filetype='GTiff',datatype='INT1U')
}
lapply(sieved,proc_raster)
# Plot preci and water level from ANA
library(dplyr)
library(ggplot2)
library(tidyr)
library(lubridate)
library(scales)
library(httr)
######  ANA GET requst
ana_url <- 'http://telemetriaws1.ana.gov.br/ServiceANA.asmx/DadosHidrometeorologicos'
cod_esta <- '12850000'
data_ini <- '1900-01-01'
data_fim <- '2032-12-01'
r <- GET(ana_url, accept_json(), query = list(codEstacao = cod_esta,
dataInicio = data_ini,
dataFim= data_fim))
# rawToChar() will convert raw data
# to char and store in response variable
response < - rawToChar(r$content)
# rawToChar() will convert raw data
# to char and store in response variable
response <- rawToChar(r$content)
# print response
print(response)
library(JSON)
install.packages("JSON")
install.packages("tidyve")
install.packages(c("tidyverse", "jsonlite"))
library(tidyverse)
ana_url <- 'http://telemetriaws1.ana.gov.br/ServiceANA.asmx/DadosHidrometeorologicos'
cod_esta <- '12850000'
data_ini <- '1900-01-01'
data_fim <- '2032-12-01'
r <- GET(ana_url, accept_json(), query = list(codEstacao = cod_esta,
dataInicio = data_ini,
dataFim= data_fim))
library(httr)
?GET
response <- GET(ana_url, query = list(codEstacao = cod_esta,
dataInicio = data_ini,
dataFim= data_fim)) %>%
content()
# get names of the categories
category_names <- pluck(raw_json, "categories", 1, "labels") %>% tolower()
# get names of the categories
category_names <- pluck(response, "categories", 1, "labels") %>% tolower()
# Exploring the data levels
str(response,max.level = 1)
# Exploring the data levels
str(response$doc,max.level = 1)
# Exploring the data levels
str(response$node,max.level = 1)
install.packages("xml2")
library(xml2)
# Parse xml data
cotas_xml = as_list(read_xml(response))
# Parse xml data
cotas_xml = as_list(read_xml(response$doc))
?xml2
?read_xml
str(content)
str(response)
response <- response %>% rawToChar()
response <- rawToChar(response)
# Get the data
response <- GET(ana_url, query = list(codEstacao = cod_esta,
dataInicio = data_ini,
dataFim= data_fim)) %>%
rawToChar()
source("C:/Projects/NGS_PP_Mamiraua_data/Water_level/Tefe/plot_clim.R", echo=TRUE)
# Set base work folder
setwd('C:/Projects/NGS_PP_Mamiraua_data/Water_level/fonte_boa_12351000/')
# Get base data from Fonte Boa
cota2 <- read.csv('cotas_C_12351000_daily.csv')
# Get 2023 data from the telemetry station
cota2023 <- read.csv('fonte_boa_2023.txt')
# Prepare datavframe for plotting
cota2 <- cota2 %>%
rename('water_level'=precip) %>%
mutate(yr=year(dt),
mon = month(dt),
doy = yday(dt))
# Calculate 95% confidence interval
cota2_ci <- cota2 %>% group_by(doy) %>%
summarise(p025 = quantile(water_level,p=0.025,na.rm = TRUE),
p975 = quantile(water_level,p=0.9755,na.rm = TRUE))
# Calculatemin and maxi levels
cota2_mnmx <- cota2 %>% group_by(doy) %>%
summarise(mn = min(water_level, na.rm = TRUE),
mx = max(water_level, na.rm = TRUE))
# Set base work folder
setwd('C:/Projects/NGS_PP_Mamiraua_data/Water_level/fonte_boa_12351000/')
# Get base data from Fonte Boa
cota2 <- read.csv('cotas_C_12351000_daily.csv')
# Get 2023 data from the telemetry station
cota2023 <- read.csv('fonte_boa_2023.txt')
# Prepare datavframe for plotting
cota2 <- cota2 %>%
rename('water_level'=precip) %>%
mutate(yr=year(dt),
mon = month(dt),
doy = yday(dt))
# Prepare datavframe for plotting
cota2 <- cota2 %>%
rename('water_level'='precip') %>%
mutate(yr=year(dt),
mon = month(dt),
doy = yday(dt))
?rename
# Prepare datavframe for plotting
cota2 <- cota2 %>%
rename(water_level=precip) %>%
mutate(yr=year(dt),
mon = month(dt),
doy = yday(dt))
head(cotas2)
head(cota2)
# Prepare datavframe for plotting
cota2 <- cota2 %>%
mutate(doy = yday(dt))
# Calculate 95% confidence interval
cota2_ci <- cota2 %>% group_by(doy) %>%
summarise(p025 = quantile(water_level,p=0.025,na.rm = TRUE),
p975 = quantile(water_level,p=0.9755,na.rm = TRUE))
# Calculate 95% confidence interval
cota2_ci <- cota2 %>% group_by(doy) %>%
summarise(p025 = quantile(level_cm,p=0.025,na.rm = TRUE),
p975 = quantile(level_cm,p=0.9755,na.rm = TRUE))
# Calculatemin and maxi levels
cota2_mnmx <- cota2 %>% group_by(doy) %>%
summarise(mn = min(level_cm, na.rm = TRUE),
mx = max(level_cm, na.rm = TRUE))
# Calculate long term mean
cota2_mean <- cota2 %>% filter(yr <= 2002) %>% group_by(doy) %>%
summarise(mean = mean(level_cm,na.rm = TRUE))
# Isolate individual years
cota2_2015 <- cota2 %>% filter(yr==2015)
cota2_1998 <- cota2 %>% filter(yr==1998)
cota2_2005 <- cota2 %>% filter(yr==2005)
cota2_1983 <- cota2 %>% filter(yr==1983)
# Prepare 2023 data to plot
cota2_2023 <- cota2023 %>% select(DataHora,NivelFinal) %>%
mutate(dt = parse_date_time(DataHora,'Y-m-d H:M:S'),
yr = year(dt),
month= month(dt),
doy = yday(dt)) %>%
rename('level_cm'=NivelFinal)
# Plot inundation
ggplot() +
# Min and max
#geom_ribbon(data=cota2_mnmx,aes(x=mon,ymin=mn,ymax=mx),fill='gray10',linesize=1) +
#annotate('text',label='95% C.I.',x=100,y=1400, color='gray10',size=5) +
# CI
geom_ribbon(data=cota2_ci,aes(x=doy,ymin=p025,ymax=p975),fill='gray70',linesize=1) +
annotate('text',label='95% C.I.',x=100,y=1300, color='gray50',size=5) +
# Mean
geom_line(data=cota2_mean,aes(doy,mean),color='black',size=1,linetype=2,linesize=1) +
annotate('text',label='Mean 1979-2022',x=100,y=1250, color='black',size=5) +
# 1983
geom_line(data=cota2_1983,aes(doy,level_cm),color='darkred',linesize=1) +
annotate('text',label='1983',x=100,y=1200, color='darkred',size=5) +
# 1998
geom_line(data=cota2_1998,aes(doy,level_cm),color='red',linesize=1) +
annotate('text',label='1998',x=100,y=1150, color='red',size=5) +
# 2005
geom_line(data=cota2_2005,aes(doy,level_cm),color='orange',linesize=1) +
annotate('text',label='2005',x=100,y=1100, color='orange',size=5) +
# 2015
geom_line(data=cota2_2015,aes(doy,level_cm),color='coral1',linesize=1) +
annotate('text',label='2015',x=100,y=1050, color='coral1',size=5) +
# 2023
geom_line(data=cota2_2023,aes(doy,level_cm),color='blue',linesize=1) +
annotate('text',label='2023',x=100,y=1000, color='blue',size=5) +
# Other params
xlab('Day of the Year') + ylab('Water Level (cm)') +
theme_gray(base_size = 16)
##### Plot rainfall
prec1 <- na.omit(read.csv('chuvas_C_00266000_daily.csv',
colClasses = c(dt='Date',precip='numeric')))
prec2 <- na.omit(read.csv('chuvas_C_00266005_daily.csv',
colClasses = c(dt='Date',precip='numeric')))
# Prepare datavframe for plotting
prec <- prec2 %>%
mutate(yr=year(dt),
mon = month(dt),
mon_lab = month(dt,label=TRUE,abbr=TRUE),
doy = yday(dt))
prec_mon <- prec %>%
group_by(mon,yr) %>%
summarise(prec_mon = sum(precip)) %>%
ungroup() %>%
arrange(yr,mon)
# Calculate 95% confidence interval
prec_ci <- prec_mon %>% group_by(mon) %>%
summarise(p025 = quantile(prec_mon,p=0.025,na.rm = TRUE),
p975 = quantile(prec_mon,p=0.975,na.rm = TRUE))
# Calculatemin and maxi levels
prec_mnmx <- prec_mon %>% group_by(mon) %>%
summarise(mn = min(prec_mon, na.rm = TRUE),
mx = max(prec_mon, na.rm = TRUE))
# Calculate long term mean
prec_mean <- prec_mon %>% filter(yr <= 2023) %>% group_by(mon) %>%
summarise(mean = mean(prec_mon,na.rm = TRUE))
# Isolate individual years
prec_2015 <- prec_mon %>% filter(yr==2015)
prec_1998 <- prec_mon %>% filter(yr==1998)
prec_2005 <- prec_mon %>% filter(yr==2005)
prec_2010 <- prec_mon %>% filter(yr==2010)
prec_1983 <- prec_mon %>% filter(yr==1983)
# Plot inundation
ggplot() +
# Min and max
#geom_ribbon(data=prec_mnmx,aes(x=mon,ymin=mn,ymax=mx),fill='gray10') +
#annotate('text',label='Min-Max',x=8,y=500, color='gray10',size=5) +
# CI
geom_ribbon(data=prec_ci,aes(x=mon,ymin=p025,ymax=p975),fill='gray70') +
annotate('text',label='95% C.I.',x=8,y=470, color='gray50',size=5) +
# Mean
geom_line(data=prec_mean,aes(mon,mean),color='black',size=1,linetype=2,linesize=1) +
annotate('text',label='Mean 1979-2022',x=8,y=440, color='black',size=5) +
# 1983
#geom_line(data=prec_1983,aes(mon,prec_mon),color='darkred',linesize=1) +
#annotate('text',label='1983',x=8,y=410, color='darkred',size=5) +
# 1998
#geom_line(data=prec_1998,aes(mon,prec_mon),color='red',linesize=1) +
#annotate('text',label='1998',x=8,y=380, color='red',size=5) +
# 2005
geom_line(data=prec_2005,aes(mon,prec_mon),color='orange',linesize=1) +
annotate('text',label='2005',x=8,y=410, color='orange',size=5) +
# 2010
geom_line(data=prec_2010,aes(mon,prec_mon),color='darkred',linesize=1) +
annotate('text',label='2010',x=8,y=380, color='darkred',size=5) +
# 2015
geom_line(data=prec_2015,aes(mon,prec_mon),color='coral1',linesize=1) +
annotate('text',label='2015',x=8,y=350, color='coral1',size=5) +
# 2023
#geom_line(data=prec_2023,aes(mon,precip),color='blue',linesize=1) +
#annotate('text',label='2023',x=100,y=1000, color='blue',size=5) +
# Other params
scale_x_continuous(breaks=c(1:12),labels=month.abb) +
xlab('Month') + ylab('Rainfall (mm') +
theme_gray(base_size = 16)
# Plot inundation
ggplot() +
# Min and max
#geom_ribbon(data=prec_mnmx,aes(x=mon,ymin=mn,ymax=mx),fill='gray10') +
#annotate('text',label='Min-Max',x=8,y=500, color='gray10',size=5) +
# CI
geom_ribbon(data=prec_ci,aes(x=mon,ymin=p025,ymax=p975),fill='gray70') +
annotate('text',label='95% C.I.',x=8,y=470, color='gray50',size=5) +
# Mean
geom_line(data=prec_mean,aes(mon,mean),color='black',size=1,linetype=2,linesize=1) +
annotate('text',label='Mean 1979-2022',x=8,y=440, color='black',size=5) +
# 1983
#geom_line(data=prec_1983,aes(mon,prec_mon),color='darkred',linesize=1) +
#annotate('text',label='1983',x=8,y=410, color='darkred',size=5) +
# 1998
geom_line(data=prec_1998,aes(mon,prec_mon),color='red',linesize=1) +
annotate('text',label='1998',x=8,y=380, color='red',size=5) +
# 2005
geom_line(data=prec_2005,aes(mon,prec_mon),color='orange',linesize=1) +
annotate('text',label='2005',x=8,y=410, color='orange',size=5) +
# 2010
geom_line(data=prec_2010,aes(mon,prec_mon),color='darkred',linesize=1) +
annotate('text',label='2010',x=8,y=380, color='darkred',size=5) +
# 2015
geom_line(data=prec_2015,aes(mon,prec_mon),color='coral1',linesize=1) +
annotate('text',label='2015',x=8,y=350, color='coral1',size=5) +
# 2023
#geom_line(data=prec_2023,aes(mon,precip),color='blue',linesize=1) +
#annotate('text',label='2023',x=100,y=1000, color='blue',size=5) +
# Other params
scale_x_continuous(breaks=c(1:12),labels=month.abb) +
xlab('Month') + ylab('Rainfall (mm') +
theme_gray(base_size = 16)
head(prec)
tail(prec)
head(prec2)
tail(prec2)
head(prec1)
# Prepare datavframe for plotting
prec1_mut <- prec1 %>%
mutate(yr=year(dt),
mon = month(dt),
mon_lab = month(dt,label=TRUE,abbr=TRUE),
doy = yday(dt))
prec_mon1 <- prec1_mut %>%
group_by(mon,yr) %>%
summarise(prec_mon = sum(precip)) %>%
ungroup() %>%
arrange(yr,mon)
prec2_mut <- prec2 %>%
mutate(yr=year(dt),
mon = month(dt),
mon_lab = month(dt,label=TRUE,abbr=TRUE),
doy = yday(dt))
prec_mon2 <- prec2_mut %>%
group_by(mon,yr) %>%
summarise(prec_mon = sum(precip)) %>%
ungroup() %>%
arrange(yr,mon)
head(prec_mon1)
prec_clim1 <- prec_mon1 %>% group_by(mon) %>%
summarise(prec = sum(prec_mon))
head(prec_clim1)
prec_clim1 <- prec_mon1 %>% group_by(mon) %>%
summarise(prec_mean = mean(prec_mon, na.rm=T), prec_sd = sd(prec_mon,na.rm=T))
head(prec_clim1)
prec_clim2 <- prec_mon2 %>% group_by(mon) %>%
summarise(prec_mean = mean(prec_mon, na.rm=T), prec_sd = sd(prec_mon,na.rm=T))
head(prec_mon1
)
prec_mon1 %>% filter(yr >=2005)
tail(prec_mon1)
head(prec_1)
head(prec1)
tail(prec1)
# Get prcip data
prec1 <- read.csv('chuvas_C_00266000_daily.csv')
prec2 <- read,csv('chuvas_C_00266005_daily.csv')
prec2 <- read.csv('chuvas_C_00266005_daily.csv')
summary(prec1)
head(prec1)
source("C:/Projects/NGS_PP_Mamiraua_data/Water_level/Tefe/plot_clim.R", echo=TRUE)
tail(prec1)
# Accumulate monthly
prec1 <- prec1 %>%
mutate(dt = parse_date_time(dt, orders='Y-m-d')) %>%
mutate(d = day(dt), m=month(dt), y=year(dt),yd=yday(dt)) %>%
# Isolate individual years
cota2_2015 <- cota2 %>% filter(yr==2015)
# Accumulate monthly
prec1 <- prec1 %>%
mutate(dt = parse_date_time(dt, orders='Y-m-d')) %>%
mutate(d = day(dt), m=month(dt), y=year(dt),yd=yday(dt)) %>%
# Isolate individual years
cota2_2015 <- cota2 %>% filter(yr==2015)
# Accumulate monthly
prec1 <- prec1 %>%
mutate(dt = parse_date_time(dt, orders='Y-m-d')) %>%
mutate(d = day(dt), m=month(dt), y=year(dt),yd=yday(dt))
head(prec1)
prec2 <- prec2 %>%
mutate(dt = parse_date_time(dt, orders='Y-m-d')) %>%
mutate(d = day(dt), m=month(dt), y=year(dt),yd=yday(dt))
# Accumulate monthly
prec_month1 <- prec1 %>% group_by(m) %>%
sumamrise(precip = sum(precip,na.rm=T))
# Accumulate monthly
prec_month1 <- prec1 %>% group_by(m) %>%
summarise(precip = sum(precip,na.rm=T))
head(prec_month1)
# Accumulate monthly
prec_month1 <- prec1 %>% group_by(m,y) %>%
summarise(precip = sum(precip,na.rm=T))
head(prec_month1)
prec_month2 <- prec2 %>% group_by(m,y) %>%
summarise(precip = sum(precip,na.rm=T))
head(prec_month2)
tail(prec_month1)
tail(prec1)
# Get precip data
prec1 <- read.csv('chuvas_C_00266000_daily.csv')
tail(prec1)
# Set base work folder
setwd('C:/Projects/ENSO-Monitor/data/')
