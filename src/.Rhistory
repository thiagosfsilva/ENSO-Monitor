dt['sec']
dt
class(dt)
yday(dt)
dt[[8]]
dt[]8
dt[8]
y22 <- seq(as.Date('2022-01-01'),as.Date('2022-12-31))
y22 <- seq(as.Date('2022-01-01'),as.Date('2022-12-31'))
y22 <- seq(Date('2022-01-01'),Date('2022-12-31'))
julian(dt)
st <- strptime('2022-01-01',format='Y-m-d')
julian(dt.origin=st)
julian(dt,origin=st)
dt-st
dt
st
st <- strptime('2022-01-01',format='%Y-%m-%d')
st
julian(dt,origin=st)
install.packages("lidR")
install.packages("tree3d")
install.packages("remotes")
remotes::install_github('umr-amap/aRchi')
library(lidR)
cl <- 'C:/Projects/NGS_PP_Mamiraua_data/TLS/plot3a_TDX/3a_plot_cloud.las'
cl_las <- lidR::readLAS(cl)
?lidR
browseVignettes(package = "lidR")
cl_las <- readLAScatalog(cl)
cl_las
library(lidR)
cl <- 'C:/Projects/NGS_PP_Mamiraua_data/TLS/plot3a_TDX/3a_plot_cloud.las'
cl_las <- readLAScatalog(cl)
las_check(cl_las)
?las_check
las_check(cl_las,deep = TRUE)
sieved <- list.files('E:/NGS_wetlands_map/sieve/*.tif$',full.names = TRUE)
sieved <- list.files('E:/NGS_wetlands_map/sieve/*tif$',full.names = TRUE)
sieved <- list.files('E:/NGS_wetlands_map/sieve/.*tif$',full.names = TRUE)
sieved <- list.files('E:/NGS_wetlands_map/sieve/',full.names = TRUE)
sieved <- list.files('E:/NGS_wetlands_map/sieve/tif$',full.names = TRUE)
sieved <- list.files('E:/NGS_wetlands_map/sieve/$tif',full.names = TRUE)
sieved <- list.files('E:/NGS_wetlands_map/sieve/',full.names = TRUE)
?list.files
sieved <- list.files('E:/NGS_wetlands_map/sieve/',
pattern='tile.*tif$',
full.names = TRUE)
?overlay
?over
DW <- rast('E:/NGS_wetlands_map/DW/DW_albers_12_5.tif')
library(terra)
DW <- rast('E:/NGS_wetlands_map/DW/DW_albers_12_5.tif')
?resample
sieved[1]
sv <- rast(sieved[1])
dw_crop <- resample(DW,sw)
dw_crop <- resample(DW,sw,'near')
sv <- rast(sieved[1])
dw_crop <- resample(DW,sw,'near')
dw_crop <- resample(DW,y=sw,method='near')
dw_crop <- resample(DW,y=sv,method='near')
reclass
?terra
matrix(c(0,0,1,
1,5,NA,
6,6,6,
7,7,5,
by.row=TRUE))
matrix(c(0,0,1,
1,5,NA,
6,6,6,
7,7,5,
ncol=3
by.row=TRUE))
?matric
?matrix
matrix(c(0,0,1,
1,5,NA,
6,6,6,
7,7,5,
ncol=3,
by.row=TRUE))
matrix(c(0,0,1,
1,5,NA,
6,6,6,
7,7,5),
ncol=3,
by.row=TRUE))
matrix(c(0,0,1,
1,5,NA,
6,6,6,
7,7,5),
ncol=3,
by.row=TRUE)
matrix(c(0,0,1,
1,5,NA,
6,6,6,
7,7,5),
ncol=3,
byrow=TRUE)
rec_mat <- matrix(c(0,0,1,
1,5,NA,
6,6,6,
7,7,5),
ncol=3,
byrow=TRUE)
dw_rec <- classify(dw_crop,rec_mat)
plot((dw_rec))
plot(dw_crop)
rec_mat <- matrix(c(0,0,1,
1,5,NA,
6,6,6,
7,7,5,
8,8,0),
ncol=3,
byrow=TRUE)
dw_rec <- classify(dw_crop,rec_mat)
plot((dw_rec))
rec_mat <- matrix(c(0,0,1,
1,5,NA,
6,6,6,
7,7,5,
8,8,0),
ncol=3,
byrow=TRUE)
dw_rec <- classify(dw_crop,rec_mat)
plot(dw_crop)
rec_mat <- matrix(c(0,1,1,
1,6,NA,
6,7,6,
7,8,5,
8,9,0),
ncol=3,
byrow=TRUE)
dw_rec <- classify(dw_crop,rec_mat)
plot(dw_crop)
plot((dw_rec))
plot(sv)
sv <- rast(sieved[1828])
sv <- rast(sieved[828])
plot(sv)
sieved[828]
sieved[800]
sieved[600]
sieved[500]
sieved[505]
sv <- rast(sieved[505])
plot(sv)
values(dw_rec[1:50])
values(dw_rec)[1:50]
summary(values(dw_rec)
)
rep_ind <-  !is.na(dw_rec)
rep_ind
rep_ind <-  !is.na(values(dw_rec))
rep_ind
rep_ind <-  which(!is.na(values(dw_rec)))
rep_ind
values(sv)[rep_ind] <- values(dw_rec)[rep_ind]
plot(sv)
sv <- rast(sieved[505])
dw_crop <- resample(DW,y=sv,method='near')
rec_mat <- matrix(c(0,1,1,
1,6,NA,
6,7,6,
7,8,5,
8,9,0),
ncol=3,
byrow=TRUE)
dw_rec <- classify(dw_crop,rec_mat)
rep_ind <-  which(!is.na(values(dw_rec)))
values(sv)[rep_ind] <- values(dw_rec)[rep_ind]
plot(sv)
write.raster(sv,'E:/NGS_wetlands_map/test.tif')
writeRaster(sv,'E:/NGS_wetlands_map/test.tif')
library(terra)
library(raster)
library(tmap)
tmap_mode('view')
sieved <- list.files('E:/NGS_wetlands_map/sieve/',
pattern='tile.*tif$',
full.names = TRUE)
DW <- rast('E:/NGS_wetlands_map/DW/DW_albers_12_5.tif')
class_col <- c("#000000","#1f78b4","#b2df89","#33a02c","#aaaaaa","#e31a1c", "#ffff99")
class_names <- c('None','Permanent Water Bodies',
'Non-forest wetland vegetation',
'Wetland Forest',
'Upland',
'Built-up areas',
'Beaches'
)
sv <- rast(sieved[505])
tm_shape(sv) +
tm_raster("cover_cls", palette = class_col, title = "Global Land Cover")
plot(sv,col.regions=col)
plot(sv,col.regions=class_col)
plot(sv,col=class_col)
plot(sv,col=class_col[2:5])
class_col <- c("#1f78b4","#b2df89","#33a02c","#aaaaaa","#e31a1c", "#ffff99")
plot(sv,col=class_col)
_
plot(sv,col=class_col)
class_col <- c("#1f78b4","#b2df89","#33a02c","#aaaaaa","#e31a1c", "#ffff99")
plot(sv,col=class_col)
class_col
plot(sv,col=class_col[1:4])
dw_crop <- resample(DW,y=sv,method='near')
rec_mat <- matrix(c(0,1,1,
1,6,NA,
6,7,6,
7,8,5,
8,9,0),
ncol=3,
byrow=TRUE)
dw_rec <- classify(dw_crop,rec_mat)
rep_ind <-  which(!is.na(values(dw_rec)))
values(sv)[rep_ind] <- values(dw_rec)[rep_ind]
plot(sv,col=class_col)
plot(sv,col=class_col[1:6])
plot(dw_rec,col=class_col[1:6])
rec_mat <- matrix(c(0,1,NA,
1,6,NA,
6,7,6,
7,8,5,
8,9,NA),
ncol=3,
byrow=TRUE)
dw_rec <- classify(dw_crop,rec_mat)
plot(dw_rec,col=class_col[1:6])
sv <- rast(sieved[505])
rep_ind <-  which(!is.na(values(dw_rec)))
values(sv)[rep_ind] <- values(dw_rec)[rep_ind]
plot(sv,col=class_col[1:6])
plot(dw_crop)
DW <- rast('E:/NGS_wetlands_map/DW/DW_albers_12_5.tif')
sieved[505]
sieved[450]
sieved[451]
sv <- rast(sieved[451])
plot(sv,col=class_col[1:4])
sieved[505]
sv <- rast(sieved[504])
plot(sv,col=class_col[1:4])
dw_crop <- resample(DW,y=sv,method='near')
plot(dw_crop)
rec_mat <- matrix(c(0,1,1,
1,6,NA,
6,7,6,
7,8,5,
8,9,NA),
ncol=3,
byrow=TRUE)
dw_rec <- classify(dw_crop,rec_mat)
plot(dw_rec,col=class_col[1:6])
dw_crop[is.na(dw_crop)] <- 9
plot(dw_crop)
rec_mat <- matrix(c(0,1,NA,
1,6,NA,
6,7,6,
7,8,5,
8,9,1),
ncol=3,
byrow=TRUE)
dw_rec <- classify(dw_crop,rec_mat)
plot(dw_rec,col=class_col[1:6])
rec_mat <- matrix(c(0,1,NA,
1,6,NA,
6,7,5,
7,8,6,
8,9,1),
ncol=3,
byrow=TRUE)
dw_rec <- classify(dw_crop,rec_mat)
plot(dw_rec,col=class_col[1:6])
dw_crop[is.na(dw_crop)] <- 9
plot(dw_crop)
rec_mat <- matrix(c(0,1,NA,
1,5,NA,
5,7,5,
7,8,6,
8,9,1),
ncol=3,
byrow=TRUE)
dw_rec <- classify(dw_crop,rec_mat)
plot(dw_rec,col=class_col[1:6])
rec_mat <- matrix(c(0,1,NA,
1,5,NA,
5,6,5,
6,7,6,
7,9,1),
ncol=3,
byrow=TRUE)
dw_rec <- classify(dw_crop,rec_mat)
plot(dw_rec,col=class_col[1:6])
rep_ind <-  which(!is.na(values(dw_rec)))
values(sv)[rep_ind] <- values(dw_rec)[rep_ind]
plot(sv,col=class_col[1:6])
writeRaster(sv,'E:/NGS_wetlands_map/test.tif')
library(tools)
fname <- basename(file_path_sans_ext(sieved[1]))
fname
?writeRaster
sieved <- list.files("C:/Projects/NGS_Amazon_mapping/output/sieve/",
pattern='tile.*tif$',
full.names = TRUE)
?lapply
proc_raster <- function(inras){
sv <- rast(inras)
# plot(sv,col=class_col[1:4])
dw_crop <- resample(DW,y=sv,method='near')
#plot(dw_crop)
dw_crop[is.na(dw_crop)] <- 9
dw_rec <- classify(dw_crop,rec_mat)
# plot(dw_rec,col=class_col[1:6])
rep_ind <-  which(!is.na(values(dw_rec)))
values(sv)[rep_ind] <- values(dw_rec)[rep_ind]
#plot(sv,col=class_col[1:6])
fname <- basename(file_path_sans_ext(inras))
fpath <- paste0("C:/Projects\NGS_Amazon_mapping/output/sieve_comb/",fname,'_comb.tif')
proc_raster <- function(inras){
sv <- rast(inras)
# plot(sv,col=class_col[1:4])
dw_crop <- resample(DW,y=sv,method='near')
#plot(dw_crop)
dw_crop[is.na(dw_crop)] <- 9
dw_rec <- classify(dw_crop,rec_mat)
# plot(dw_rec,col=class_col[1:6])
rep_ind <-  which(!is.na(values(dw_rec)))
values(sv)[rep_ind] <- values(dw_rec)[rep_ind]
#plot(sv,col=class_col[1:6])
fname <- basename(file_path_sans_ext(inras))
fpath <- paste0("C:/Projects\NGS_Amazon_mapping/output/sieve_comb/",fname,'_comb.tif')
proc_raster <- function(inras){
sv <- rast(inras)
# plot(sv,col=class_col[1:4])
dw_crop <- resample(DW,y=sv,method='near')
#plot(dw_crop)
dw_crop[is.na(dw_crop)] <- 9
dw_rec <- classify(dw_crop,rec_mat)
# plot(dw_rec,col=class_col[1:6])
rep_ind <-  which(!is.na(values(dw_rec)))
values(sv)[rep_ind] <- values(dw_rec)[rep_ind]
#plot(sv,col=class_col[1:6])
fname <- basename(file_path_sans_ext(inras))
fpath <- paste0("C:/Projects/NGS_Amazon_mapping/output/sieve_comb/",fname,'_comb.tif')
writeRaster(sv,fpath,filetype='GTiff',datatype='INT1U')
}
lapply(sieved,proc_raster,)
sieved <- list.files("C:/Projects/NGS_Amazon_mapping/output/sieve/",
pattern='tile.*tif$',
full.names = TRUE)
DW <- rast('E:/NGS_wetlands_map/DW/DW_albers_12_5.tif')
class_col <- c("#1f78b4","#b2df89","#33a02c","#aaaaaa","#e31a1c", "#ffff99")
class_names <- c('None','Permanent Water Bodies',
'Non-forest wetland vegetation',
'Wetland Forest',
'Upland',
'Built-up areas',
'Beaches'
)
rec_mat <- matrix(c(0,1,NA,
1,5,NA,
5,6,5,
6,7,6,
7,9,1),
ncol=3,
byrow=TRUE)
proc_raster <- function(inras){
sv <- rast(inras)
# plot(sv,col=class_col[1:4])
dw_crop <- resample(DW,y=sv,method='near')
#plot(dw_crop)
dw_crop[is.na(dw_crop)] <- 9
dw_rec <- classify(dw_crop,rec_mat)
# plot(dw_rec,col=class_col[1:6])
rep_ind <-  which(!is.na(values(dw_rec)))
values(sv)[rep_ind] <- values(dw_rec)[rep_ind]
#plot(sv,col=class_col[1:6])
fname <- basename(file_path_sans_ext(inras))
fpath <- paste0("C:/Projects/NGS_Amazon_mapping/output/sieve_comb/",fname,'_comb.tif')
writeRaster(sv,fpath,filetype='GTiff',datatype='INT1U')
}
lapply(sieved,proc_raster)
# Plot preci and water level from ANA
library(dplyr)
library(ggplot2)
library(tidyr)
library(lubridate)
library(scales)
library(httr)
######  ANA GET requst
ana_url <- 'http://telemetriaws1.ana.gov.br/ServiceANA.asmx/DadosHidrometeorologicos'
cod_esta <- '12850000'
data_ini <- '1900-01-01'
data_fim <- '2032-12-01'
r <- GET(ana_url, accept_json(), query = list(codEstacao = cod_esta,
dataInicio = data_ini,
dataFim= data_fim))
# rawToChar() will convert raw data
# to char and store in response variable
response < - rawToChar(r$content)
# rawToChar() will convert raw data
# to char and store in response variable
response <- rawToChar(r$content)
# print response
print(response)
library(JSON)
install.packages("JSON")
install.packages("tidyve")
install.packages(c("tidyverse", "jsonlite"))
library(tidyverse)
ana_url <- 'http://telemetriaws1.ana.gov.br/ServiceANA.asmx/DadosHidrometeorologicos'
cod_esta <- '12850000'
data_ini <- '1900-01-01'
data_fim <- '2032-12-01'
r <- GET(ana_url, accept_json(), query = list(codEstacao = cod_esta,
dataInicio = data_ini,
dataFim= data_fim))
library(httr)
?GET
response <- GET(ana_url, query = list(codEstacao = cod_esta,
dataInicio = data_ini,
dataFim= data_fim)) %>%
content()
# get names of the categories
category_names <- pluck(raw_json, "categories", 1, "labels") %>% tolower()
# get names of the categories
category_names <- pluck(response, "categories", 1, "labels") %>% tolower()
# Exploring the data levels
str(response,max.level = 1)
# Exploring the data levels
str(response$doc,max.level = 1)
# Exploring the data levels
str(response$node,max.level = 1)
install.packages("xml2")
library(xml2)
# Parse xml data
cotas_xml = as_list(read_xml(response))
# Parse xml data
cotas_xml = as_list(read_xml(response$doc))
?xml2
?read_xml
str(content)
str(response)
response <- response %>% rawToChar()
response <- rawToChar(response)
# Get the data
response <- GET(ana_url, query = list(codEstacao = cod_esta,
dataInicio = data_ini,
dataFim= data_fim)) %>%
rawToChar()
x <- c(1,2,3,4,5,6)
y <- c(5,6,7,8,9)
match(x,y)
intersect(x,y)
x %in% y
y[x %in% y]
x[x %in% y]
?mclaplly
parallel::
?parallel::mclapply
raster
library(raster)
mwtd <- raster('C:/Users/Thiago/Downloads/SAMERICA_WTD_annualmean.nc')
install.packages("ncdf4")
mwtd <- raster('C:/Users/Thiago/Downloads/SAMERICA_WTD_annualmean.nc')
mwtd
plot(mwtd)
mwtd <- raster('C:/Users/Thiago/Downloads/SAMERICA_WTD_monthlymeans.nc')
mwtd
library(sf)
library(terra)
library(sf)
awtd <- rast('C:/Users/Thiago/Downloads/SAMERICA_WTD_annualmean.nc')
mwtd <- rast('C:/Users/Thiago/Downloads/SAMERICA_WTD_monthlymeans.nc')
plots <- st_read('C:/Users/Thiago/Downloads/cwm50_input_map_mcwd_29sep23.gpkg')
mwtd
p_awtd <- extract(awtd,plots)
p_awtd
p_mwtd <- extract(mwtd,plots)
p_mwtd
wtd_df <- cbind(plots,p_awtd,p_mwtd)
libreray(dplyr)
library(dplyr)
?select
wrd_df <- wtd_df %>% select(-c(ID,mask,ID.1,mask.1)
)
View(wrd_df)
write.csv(wtd_df,'cwm50_input_map_mcwd+wtd_06oct23.csv',row.names = FALSE)
getwd()
source("C:/Users/Thiago/Documents/wtd_extract.R", echo=TRUE)
source("C:/Users/Thiago/OneDrive - University of Stirling/Manuscripts/jurua_blurb/analysis/analysis.R", echo=TRUE)
library(dplyr)
library(ggplot2)
library(tidyr)
library(lubridate)
library(scales)
library(httr)
library(here)
library(reticulate)
prec1 <- read.csv('chuvas_C_00266000_daily.csv')
getwd()
source("C:/Users/Thiago/OneDrive - University of Stirling/Manuscripts/jurua_blurb/analysis/analysis.R", echo=TRUE)
setwd("C:/Projects/ENSO-Monitor/src")
library(pacman)
p_load('dplyr','readr')
?setwd()
p_load('dplyr','readr','here')
library(pacman)
p_load('dplyr','readr','here')
here()
